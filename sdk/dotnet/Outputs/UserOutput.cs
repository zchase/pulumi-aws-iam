// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsIam.Outputs
{

    /// <summary>
    /// The IAM user.
    /// </summary>
    [OutputType]
    public sealed class UserOutput
    {
        /// <summary>
        /// The ARN assigned by AWS for this user.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The encrypted password, base64 encoded.
        /// </summary>
        public readonly string? LoginProfileEncryptedPassword;
        /// <summary>
        /// The fingerprint of the PGP key used to encrypt the password.
        /// </summary>
        public readonly string? LoginProfileKeyFingerprint;
        /// <summary>
        /// The user password.
        /// </summary>
        public readonly string? LoginProfilePassword;
        /// <summary>
        /// The user's name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The unique identifier for the SSH public key.
        /// </summary>
        public readonly string? SshKeyFingerprint;
        /// <summary>
        /// The unique identifier for the SSH public key
        /// </summary>
        public readonly string? SshKeySshPublicKeyId;
        /// <summary>
        /// The unique ID assigned by AWS.
        /// </summary>
        public readonly string? UniqueId;

        [OutputConstructor]
        private UserOutput(
            string? arn,

            string? loginProfileEncryptedPassword,

            string? loginProfileKeyFingerprint,

            string? loginProfilePassword,

            string? name,

            string? sshKeyFingerprint,

            string? sshKeySshPublicKeyId,

            string? uniqueId)
        {
            Arn = arn;
            LoginProfileEncryptedPassword = loginProfileEncryptedPassword;
            LoginProfileKeyFingerprint = loginProfileKeyFingerprint;
            LoginProfilePassword = loginProfilePassword;
            Name = name;
            SshKeyFingerprint = sshKeyFingerprint;
            SshKeySshPublicKeyId = sshKeySshPublicKeyId;
            UniqueId = uniqueId;
        }
    }
}
