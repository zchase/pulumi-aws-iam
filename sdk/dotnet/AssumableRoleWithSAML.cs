// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsIam
{
    [AwsIamResourceType("aws-iam:index:AssumableRoleWithSAML")]
    public partial class AssumableRoleWithSAML : Pulumi.ComponentResource
    {
        /// <summary>
        /// ARN of IAM role.
        /// </summary>
        [Output("iamRoleArn")]
        public Output<string> IamRoleArn { get; private set; } = null!;

        /// <summary>
        /// Name of IAM role.
        /// </summary>
        [Output("iamRoleName")]
        public Output<string> IamRoleName { get; private set; } = null!;

        /// <summary>
        /// Path of IAM role.
        /// </summary>
        [Output("iamRolePath")]
        public Output<string> IamRolePath { get; private set; } = null!;

        /// <summary>
        /// Unique ID of IAM role.
        /// </summary>
        [Output("iamRoleUniqueId")]
        public Output<string> IamRoleUniqueId { get; private set; } = null!;


        /// <summary>
        /// Create a AssumableRoleWithSAML resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssumableRoleWithSAML(string name, AssumableRoleWithSAMLArgs? args = null, ComponentResourceOptions? options = null)
            : base("aws-iam:index:AssumableRoleWithSAML", name, args ?? new AssumableRoleWithSAMLArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class AssumableRoleWithSAMLArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS SAML Endpoint.
        /// </summary>
        [Input("awsSamlEndpoint")]
        public Input<string>? AwsSamlEndpoint { get; set; }

        /// <summary>
        /// Whether to create a role.
        /// </summary>
        [Input("createRole")]
        public Input<bool>? CreateRole { get; set; }

        /// <summary>
        /// Whether policies should be detached from this role when destroying.
        /// </summary>
        [Input("forceDetachPolicies")]
        public Input<bool>? ForceDetachPolicies { get; set; }

        /// <summary>
        /// Maximum CLI/API session duration in seconds between 3600 and 43200.
        /// </summary>
        [Input("maxSessionDuration")]
        public Input<int>? MaxSessionDuration { get; set; }

        /// <summary>
        /// Number of IAM policies to attach to IAM role.
        /// </summary>
        [Input("numberOfRolePolicyArns")]
        public Input<int>? NumberOfRolePolicyArns { get; set; }

        /// <summary>
        /// ID of the SAML Provider. Use provider_ids to specify several IDs.
        /// </summary>
        [Input("providerId")]
        public Input<string>? ProviderId { get; set; }

        [Input("providerIds")]
        private InputList<string>? _providerIds;

        /// <summary>
        /// List of SAML Provider IDs.
        /// </summary>
        public InputList<string> ProviderIds
        {
            get => _providerIds ?? (_providerIds = new InputList<string>());
            set => _providerIds = value;
        }

        /// <summary>
        /// IAM Role description.
        /// </summary>
        [Input("roleDescription")]
        public Input<string>? RoleDescription { get; set; }

        /// <summary>
        /// IAM role name.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// IAM role name prefix.
        /// </summary>
        [Input("roleNamePrefix")]
        public Input<string>? RoleNamePrefix { get; set; }

        /// <summary>
        /// Path of IAM role.
        /// </summary>
        [Input("rolePath")]
        public Input<string>? RolePath { get; set; }

        /// <summary>
        /// Permissions boundary ARN to use for IAM role.
        /// </summary>
        [Input("rolePermissionsBoundaryArn")]
        public Input<string>? RolePermissionsBoundaryArn { get; set; }

        [Input("rolePolicyArns")]
        private InputList<string>? _rolePolicyArns;

        /// <summary>
        /// List of ARNs of IAM policies to attach to IAM role.
        /// </summary>
        public InputList<string> RolePolicyArns
        {
            get => _rolePolicyArns ?? (_rolePolicyArns = new InputList<string>());
            set => _rolePolicyArns = value;
        }

        [Input("tags")]
        public Input<Inputs.TagsArgs>? Tags { get; set; }

        public AssumableRoleWithSAMLArgs()
        {
            AwsSamlEndpoint = "https://signin.aws.amazon.com/saml";
            CreateRole = false;
            ForceDetachPolicies = false;
            MaxSessionDuration = 3600;
            ProviderId = "";
            RoleDescription = "";
            RolePath = "/";
            RolePermissionsBoundaryArn = "";
        }
    }
}
