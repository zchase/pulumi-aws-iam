// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class AssumableRoleWithSAML extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'aws-iam:index:AssumableRoleWithSAML';

    /**
     * Returns true if the given object is an instance of AssumableRoleWithSAML.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssumableRoleWithSAML {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssumableRoleWithSAML.__pulumiType;
    }

    /**
     * ARN of IAM role.
     */
    public /*out*/ readonly iamRoleArn!: pulumi.Output<string>;
    /**
     * Name of IAM role.
     */
    public /*out*/ readonly iamRoleName!: pulumi.Output<string>;
    /**
     * Path of IAM role.
     */
    public /*out*/ readonly iamRolePath!: pulumi.Output<string>;
    /**
     * Unique ID of IAM role.
     */
    public /*out*/ readonly iamRoleUniqueId!: pulumi.Output<string>;

    /**
     * Create a AssumableRoleWithSAML resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssumableRoleWithSAMLArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["awsSamlEndpoint"] = (args ? args.awsSamlEndpoint : undefined) ?? "https://signin.aws.amazon.com/saml";
            resourceInputs["createRole"] = (args ? args.createRole : undefined) ?? false;
            resourceInputs["forceDetachPolicies"] = (args ? args.forceDetachPolicies : undefined) ?? false;
            resourceInputs["maxSessionDuration"] = (args ? args.maxSessionDuration : undefined) ?? 3600;
            resourceInputs["numberOfRolePolicyArns"] = args ? args.numberOfRolePolicyArns : undefined;
            resourceInputs["providerId"] = (args ? args.providerId : undefined) ?? "";
            resourceInputs["providerIds"] = args ? args.providerIds : undefined;
            resourceInputs["roleDescription"] = (args ? args.roleDescription : undefined) ?? "";
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["roleNamePrefix"] = args ? args.roleNamePrefix : undefined;
            resourceInputs["rolePath"] = (args ? args.rolePath : undefined) ?? "/";
            resourceInputs["rolePermissionsBoundaryArn"] = (args ? args.rolePermissionsBoundaryArn : undefined) ?? "";
            resourceInputs["rolePolicyArns"] = args ? args.rolePolicyArns : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["iamRoleArn"] = undefined /*out*/;
            resourceInputs["iamRoleName"] = undefined /*out*/;
            resourceInputs["iamRolePath"] = undefined /*out*/;
            resourceInputs["iamRoleUniqueId"] = undefined /*out*/;
        } else {
            resourceInputs["iamRoleArn"] = undefined /*out*/;
            resourceInputs["iamRoleName"] = undefined /*out*/;
            resourceInputs["iamRolePath"] = undefined /*out*/;
            resourceInputs["iamRoleUniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssumableRoleWithSAML.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a AssumableRoleWithSAML resource.
 */
export interface AssumableRoleWithSAMLArgs {
    /**
     * AWS SAML Endpoint.
     */
    awsSamlEndpoint?: pulumi.Input<string>;
    /**
     * Whether to create a role.
     */
    createRole?: pulumi.Input<boolean>;
    /**
     * Whether policies should be detached from this role when destroying.
     */
    forceDetachPolicies?: pulumi.Input<boolean>;
    /**
     * Maximum CLI/API session duration in seconds between 3600 and 43200.
     */
    maxSessionDuration?: pulumi.Input<number>;
    /**
     * Number of IAM policies to attach to IAM role.
     */
    numberOfRolePolicyArns?: pulumi.Input<number>;
    /**
     * ID of the SAML Provider. Use provider_ids to specify several IDs.
     */
    providerId?: pulumi.Input<string>;
    /**
     * List of SAML Provider IDs.
     */
    providerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IAM Role description.
     */
    roleDescription?: pulumi.Input<string>;
    /**
     * IAM role name.
     */
    roleName?: pulumi.Input<string>;
    /**
     * IAM role name prefix.
     */
    roleNamePrefix?: pulumi.Input<string>;
    /**
     * Path of IAM role.
     */
    rolePath?: pulumi.Input<string>;
    /**
     * Permissions boundary ARN to use for IAM role.
     */
    rolePermissionsBoundaryArn?: pulumi.Input<string>;
    /**
     * List of ARNs of IAM policies to attach to IAM role.
     */
    rolePolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<inputs.TagsArgs>;
}
