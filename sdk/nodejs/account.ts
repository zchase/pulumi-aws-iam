// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class Account extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'aws-iam:index:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The AWS ARN associated with the calling entity.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The AWS Account ID number of the account that owns or contains the calling entity.
     */
    public /*out*/ readonly id!: pulumi.Output<string>;
    /**
     * Indicates whether passwords in the account expire. Returns true if max password
     * age contains a value greater than 0. Returns false if it is 0 or not present.
     */
    public /*out*/ readonly passwordPolicyExpirePasswords!: pulumi.Output<boolean>;
    /**
     * The unique identifier of the calling entity.
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountAlias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountAlias'");
            }
            if ((!args || args.passwordPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'passwordPolicy'");
            }
            resourceInputs["accountAlias"] = args ? args.accountAlias : undefined;
            resourceInputs["passwordPolicy"] = args ? args.passwordPolicy : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["passwordPolicyExpirePasswords"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["passwordPolicyExpirePasswords"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * AWS IAM account alias for this account.
     */
    accountAlias: pulumi.Input<string>;
    /**
     * Options to specify complexity requirements and mandatory rotation periods for your IAM users' passwords. If
     * left empty the default AWS password policy will be applied.
     */
    passwordPolicy: pulumi.Input<inputs.AccountPasswordPolicyArgs>;
}
