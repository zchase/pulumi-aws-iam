// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsiam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AssumableRoleWithOIDC struct {
	pulumi.ResourceState

	// ARN of IAM role.
	IamRoleArn pulumi.StringOutput `pulumi:"iamRoleArn"`
	// Name of IAM role.
	IamRoleName pulumi.StringOutput `pulumi:"iamRoleName"`
	// Path of IAM role.
	IamRolePath pulumi.StringOutput `pulumi:"iamRolePath"`
	// Unique ID of IAM role.
	IamRoleUniqueId pulumi.StringOutput `pulumi:"iamRoleUniqueId"`
}

// NewAssumableRoleWithOIDC registers a new resource with the given unique name, arguments, and options.
func NewAssumableRoleWithOIDC(ctx *pulumi.Context,
	name string, args *AssumableRoleWithOIDCArgs, opts ...pulumi.ResourceOption) (*AssumableRoleWithOIDC, error) {
	if args == nil {
		args = &AssumableRoleWithOIDCArgs{}
	}

	if isZero(args.AwsAccountId) {
		args.AwsAccountId = pulumi.StringPtr("")
	}
	if isZero(args.CreateRole) {
		args.CreateRole = pulumi.BoolPtr(false)
	}
	if isZero(args.ForceDetachPolicies) {
		args.ForceDetachPolicies = pulumi.BoolPtr(false)
	}
	if isZero(args.MaxSessionDuration) {
		args.MaxSessionDuration = pulumi.IntPtr(3600)
	}
	if isZero(args.ProviderUrl) {
		args.ProviderUrl = pulumi.StringPtr("")
	}
	if isZero(args.RoleDescription) {
		args.RoleDescription = pulumi.StringPtr("")
	}
	if isZero(args.RolePath) {
		args.RolePath = pulumi.StringPtr("/")
	}
	if isZero(args.RolePermissionsBoundaryArn) {
		args.RolePermissionsBoundaryArn = pulumi.StringPtr("")
	}
	var resource AssumableRoleWithOIDC
	err := ctx.RegisterRemoteComponentResource("aws-iam:index:AssumableRoleWithOIDC", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type assumableRoleWithOIDCArgs struct {
	// The AWS account ID where the OIDC provider lives, leave empty to use the account for the AWS provider.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Whether to create a role.
	CreateRole *bool `pulumi:"createRole"`
	// Whether policies should be detached from this role when destroying.
	ForceDetachPolicies *bool `pulumi:"forceDetachPolicies"`
	// Maximum CLI/API session duration in seconds between 3600 and 43200.
	MaxSessionDuration *int `pulumi:"maxSessionDuration"`
	// Number of IAM policies to attach to IAM role.
	NumberOfRolePolicyArns *int `pulumi:"numberOfRolePolicyArns"`
	// The audience to be added to the role policy. Set to sts.amazonaws.com for cross-account assumable role. Leave empty otherwise.
	OidcFullyQualifiedAudiences []string `pulumi:"oidcFullyQualifiedAudiences"`
	// The fully qualified OIDC subjects to be added to the role policy.
	OidcFullyQualifiedSubjects []string `pulumi:"oidcFullyQualifiedSubjects"`
	// The OIDC subject using wildcards to be added to the role policy.
	OidcSubjectsWithWildcards []string `pulumi:"oidcSubjectsWithWildcards"`
	// URL of the OIDC Provider. Use provider_urls to specify several URLs.
	ProviderUrl *string `pulumi:"providerUrl"`
	// List of URLs of the OIDC Providers.
	ProviderUrls []string `pulumi:"providerUrls"`
	// IAM Role description.
	RoleDescription *string `pulumi:"roleDescription"`
	// IAM role name.
	RoleName *string `pulumi:"roleName"`
	// IAM role name prefix.
	RoleNamePrefix *string `pulumi:"roleNamePrefix"`
	// Path of IAM role.
	RolePath *string `pulumi:"rolePath"`
	// Permissions boundary ARN to use for IAM role.
	RolePermissionsBoundaryArn *string `pulumi:"rolePermissionsBoundaryArn"`
	// List of ARNs of IAM policies to attach to IAM role.
	RolePolicyArns []string `pulumi:"rolePolicyArns"`
	Tags           *Tags    `pulumi:"tags"`
}

// The set of arguments for constructing a AssumableRoleWithOIDC resource.
type AssumableRoleWithOIDCArgs struct {
	// The AWS account ID where the OIDC provider lives, leave empty to use the account for the AWS provider.
	AwsAccountId pulumi.StringPtrInput
	// Whether to create a role.
	CreateRole pulumi.BoolPtrInput
	// Whether policies should be detached from this role when destroying.
	ForceDetachPolicies pulumi.BoolPtrInput
	// Maximum CLI/API session duration in seconds between 3600 and 43200.
	MaxSessionDuration pulumi.IntPtrInput
	// Number of IAM policies to attach to IAM role.
	NumberOfRolePolicyArns pulumi.IntPtrInput
	// The audience to be added to the role policy. Set to sts.amazonaws.com for cross-account assumable role. Leave empty otherwise.
	OidcFullyQualifiedAudiences pulumi.StringArrayInput
	// The fully qualified OIDC subjects to be added to the role policy.
	OidcFullyQualifiedSubjects pulumi.StringArrayInput
	// The OIDC subject using wildcards to be added to the role policy.
	OidcSubjectsWithWildcards pulumi.StringArrayInput
	// URL of the OIDC Provider. Use provider_urls to specify several URLs.
	ProviderUrl pulumi.StringPtrInput
	// List of URLs of the OIDC Providers.
	ProviderUrls pulumi.StringArrayInput
	// IAM Role description.
	RoleDescription pulumi.StringPtrInput
	// IAM role name.
	RoleName pulumi.StringPtrInput
	// IAM role name prefix.
	RoleNamePrefix pulumi.StringPtrInput
	// Path of IAM role.
	RolePath pulumi.StringPtrInput
	// Permissions boundary ARN to use for IAM role.
	RolePermissionsBoundaryArn pulumi.StringPtrInput
	// List of ARNs of IAM policies to attach to IAM role.
	RolePolicyArns pulumi.StringArrayInput
	Tags           TagsPtrInput
}

func (AssumableRoleWithOIDCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assumableRoleWithOIDCArgs)(nil)).Elem()
}

type AssumableRoleWithOIDCInput interface {
	pulumi.Input

	ToAssumableRoleWithOIDCOutput() AssumableRoleWithOIDCOutput
	ToAssumableRoleWithOIDCOutputWithContext(ctx context.Context) AssumableRoleWithOIDCOutput
}

func (*AssumableRoleWithOIDC) ElementType() reflect.Type {
	return reflect.TypeOf((**AssumableRoleWithOIDC)(nil)).Elem()
}

func (i *AssumableRoleWithOIDC) ToAssumableRoleWithOIDCOutput() AssumableRoleWithOIDCOutput {
	return i.ToAssumableRoleWithOIDCOutputWithContext(context.Background())
}

func (i *AssumableRoleWithOIDC) ToAssumableRoleWithOIDCOutputWithContext(ctx context.Context) AssumableRoleWithOIDCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssumableRoleWithOIDCOutput)
}

// AssumableRoleWithOIDCArrayInput is an input type that accepts AssumableRoleWithOIDCArray and AssumableRoleWithOIDCArrayOutput values.
// You can construct a concrete instance of `AssumableRoleWithOIDCArrayInput` via:
//
//          AssumableRoleWithOIDCArray{ AssumableRoleWithOIDCArgs{...} }
type AssumableRoleWithOIDCArrayInput interface {
	pulumi.Input

	ToAssumableRoleWithOIDCArrayOutput() AssumableRoleWithOIDCArrayOutput
	ToAssumableRoleWithOIDCArrayOutputWithContext(context.Context) AssumableRoleWithOIDCArrayOutput
}

type AssumableRoleWithOIDCArray []AssumableRoleWithOIDCInput

func (AssumableRoleWithOIDCArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssumableRoleWithOIDC)(nil)).Elem()
}

func (i AssumableRoleWithOIDCArray) ToAssumableRoleWithOIDCArrayOutput() AssumableRoleWithOIDCArrayOutput {
	return i.ToAssumableRoleWithOIDCArrayOutputWithContext(context.Background())
}

func (i AssumableRoleWithOIDCArray) ToAssumableRoleWithOIDCArrayOutputWithContext(ctx context.Context) AssumableRoleWithOIDCArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssumableRoleWithOIDCArrayOutput)
}

// AssumableRoleWithOIDCMapInput is an input type that accepts AssumableRoleWithOIDCMap and AssumableRoleWithOIDCMapOutput values.
// You can construct a concrete instance of `AssumableRoleWithOIDCMapInput` via:
//
//          AssumableRoleWithOIDCMap{ "key": AssumableRoleWithOIDCArgs{...} }
type AssumableRoleWithOIDCMapInput interface {
	pulumi.Input

	ToAssumableRoleWithOIDCMapOutput() AssumableRoleWithOIDCMapOutput
	ToAssumableRoleWithOIDCMapOutputWithContext(context.Context) AssumableRoleWithOIDCMapOutput
}

type AssumableRoleWithOIDCMap map[string]AssumableRoleWithOIDCInput

func (AssumableRoleWithOIDCMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssumableRoleWithOIDC)(nil)).Elem()
}

func (i AssumableRoleWithOIDCMap) ToAssumableRoleWithOIDCMapOutput() AssumableRoleWithOIDCMapOutput {
	return i.ToAssumableRoleWithOIDCMapOutputWithContext(context.Background())
}

func (i AssumableRoleWithOIDCMap) ToAssumableRoleWithOIDCMapOutputWithContext(ctx context.Context) AssumableRoleWithOIDCMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssumableRoleWithOIDCMapOutput)
}

type AssumableRoleWithOIDCOutput struct{ *pulumi.OutputState }

func (AssumableRoleWithOIDCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssumableRoleWithOIDC)(nil)).Elem()
}

func (o AssumableRoleWithOIDCOutput) ToAssumableRoleWithOIDCOutput() AssumableRoleWithOIDCOutput {
	return o
}

func (o AssumableRoleWithOIDCOutput) ToAssumableRoleWithOIDCOutputWithContext(ctx context.Context) AssumableRoleWithOIDCOutput {
	return o
}

type AssumableRoleWithOIDCArrayOutput struct{ *pulumi.OutputState }

func (AssumableRoleWithOIDCArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssumableRoleWithOIDC)(nil)).Elem()
}

func (o AssumableRoleWithOIDCArrayOutput) ToAssumableRoleWithOIDCArrayOutput() AssumableRoleWithOIDCArrayOutput {
	return o
}

func (o AssumableRoleWithOIDCArrayOutput) ToAssumableRoleWithOIDCArrayOutputWithContext(ctx context.Context) AssumableRoleWithOIDCArrayOutput {
	return o
}

func (o AssumableRoleWithOIDCArrayOutput) Index(i pulumi.IntInput) AssumableRoleWithOIDCOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AssumableRoleWithOIDC {
		return vs[0].([]*AssumableRoleWithOIDC)[vs[1].(int)]
	}).(AssumableRoleWithOIDCOutput)
}

type AssumableRoleWithOIDCMapOutput struct{ *pulumi.OutputState }

func (AssumableRoleWithOIDCMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssumableRoleWithOIDC)(nil)).Elem()
}

func (o AssumableRoleWithOIDCMapOutput) ToAssumableRoleWithOIDCMapOutput() AssumableRoleWithOIDCMapOutput {
	return o
}

func (o AssumableRoleWithOIDCMapOutput) ToAssumableRoleWithOIDCMapOutputWithContext(ctx context.Context) AssumableRoleWithOIDCMapOutput {
	return o
}

func (o AssumableRoleWithOIDCMapOutput) MapIndex(k pulumi.StringInput) AssumableRoleWithOIDCOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AssumableRoleWithOIDC {
		return vs[0].(map[string]*AssumableRoleWithOIDC)[vs[1].(string)]
	}).(AssumableRoleWithOIDCOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssumableRoleWithOIDCInput)(nil)).Elem(), &AssumableRoleWithOIDC{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssumableRoleWithOIDCArrayInput)(nil)).Elem(), AssumableRoleWithOIDCArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssumableRoleWithOIDCMapInput)(nil)).Elem(), AssumableRoleWithOIDCMap{})
	pulumi.RegisterOutputType(AssumableRoleWithOIDCOutput{})
	pulumi.RegisterOutputType(AssumableRoleWithOIDCArrayOutput{})
	pulumi.RegisterOutputType(AssumableRoleWithOIDCMapOutput{})
}
