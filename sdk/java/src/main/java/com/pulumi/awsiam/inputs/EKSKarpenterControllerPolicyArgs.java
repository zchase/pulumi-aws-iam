// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Karpenter Controller policy to the role.
 * 
 */
public final class EKSKarpenterControllerPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final EKSKarpenterControllerPolicyArgs Empty = new EKSKarpenterControllerPolicyArgs();

    /**
     * Determines whether to attach the Karpenter Controller policy to the role.
     * 
     */
    @Import(name="attach", required=true)
    private Output<Boolean> attach;

    /**
     * @return Determines whether to attach the Karpenter Controller policy to the role.
     * 
     */
    public Output<Boolean> attach() {
        return this.attach;
    }

    /**
     * Cluster ID where the Karpenter controller is provisioned/managing.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return Cluster ID where the Karpenter controller is provisioned/managing.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * List of node IAM role ARNs Karpenter can use to launch nodes. If not provided,
     * the default ARN &#34;*&#34; will be applied.
     * 
     */
    @Import(name="nodeIamRoleArns")
    private @Nullable Output<List<String>> nodeIamRoleArns;

    /**
     * @return List of node IAM role ARNs Karpenter can use to launch nodes. If not provided,
     * the default ARN &#34;*&#34; will be applied.
     * 
     */
    public Optional<Output<List<String>>> nodeIamRoleArns() {
        return Optional.ofNullable(this.nodeIamRoleArns);
    }

    /**
     * List of SSM Parameter ARNs that contain AMI IDs launched by Karpenter. If not provided,
     * the default ARN &#34;arn:aws:ssm:*:*:parameter/aws/service/*&#34; will be applied.
     * 
     */
    @Import(name="ssmParameterArns")
    private @Nullable Output<List<String>> ssmParameterArns;

    /**
     * @return List of SSM Parameter ARNs that contain AMI IDs launched by Karpenter. If not provided,
     * the default ARN &#34;arn:aws:ssm:*:*:parameter/aws/service/*&#34; will be applied.
     * 
     */
    public Optional<Output<List<String>>> ssmParameterArns() {
        return Optional.ofNullable(this.ssmParameterArns);
    }

    /**
     * Account ID of where the subnets Karpenter will utilize resides. Used when subnets are shared from another account.
     * 
     */
    @Import(name="subnetAccountId")
    private @Nullable Output<String> subnetAccountId;

    /**
     * @return Account ID of where the subnets Karpenter will utilize resides. Used when subnets are shared from another account.
     * 
     */
    public Optional<Output<String>> subnetAccountId() {
        return Optional.ofNullable(this.subnetAccountId);
    }

    /**
     * Tag key (`{key = value}`) applied to resources launched by Karpenter through the Karpenter provisioner.
     * 
     */
    @Import(name="tagKey")
    private @Nullable Output<String> tagKey;

    /**
     * @return Tag key (`{key = value}`) applied to resources launched by Karpenter through the Karpenter provisioner.
     * 
     */
    public Optional<Output<String>> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    private EKSKarpenterControllerPolicyArgs() {}

    private EKSKarpenterControllerPolicyArgs(EKSKarpenterControllerPolicyArgs $) {
        this.attach = $.attach;
        this.clusterId = $.clusterId;
        this.nodeIamRoleArns = $.nodeIamRoleArns;
        this.ssmParameterArns = $.ssmParameterArns;
        this.subnetAccountId = $.subnetAccountId;
        this.tagKey = $.tagKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EKSKarpenterControllerPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EKSKarpenterControllerPolicyArgs $;

        public Builder() {
            $ = new EKSKarpenterControllerPolicyArgs();
        }

        public Builder(EKSKarpenterControllerPolicyArgs defaults) {
            $ = new EKSKarpenterControllerPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attach Determines whether to attach the Karpenter Controller policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder attach(Output<Boolean> attach) {
            $.attach = attach;
            return this;
        }

        /**
         * @param attach Determines whether to attach the Karpenter Controller policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder attach(Boolean attach) {
            return attach(Output.of(attach));
        }

        /**
         * @param clusterId Cluster ID where the Karpenter controller is provisioned/managing.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Cluster ID where the Karpenter controller is provisioned/managing.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param nodeIamRoleArns List of node IAM role ARNs Karpenter can use to launch nodes. If not provided,
         * the default ARN &#34;*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder nodeIamRoleArns(@Nullable Output<List<String>> nodeIamRoleArns) {
            $.nodeIamRoleArns = nodeIamRoleArns;
            return this;
        }

        /**
         * @param nodeIamRoleArns List of node IAM role ARNs Karpenter can use to launch nodes. If not provided,
         * the default ARN &#34;*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder nodeIamRoleArns(List<String> nodeIamRoleArns) {
            return nodeIamRoleArns(Output.of(nodeIamRoleArns));
        }

        /**
         * @param nodeIamRoleArns List of node IAM role ARNs Karpenter can use to launch nodes. If not provided,
         * the default ARN &#34;*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder nodeIamRoleArns(String... nodeIamRoleArns) {
            return nodeIamRoleArns(List.of(nodeIamRoleArns));
        }

        /**
         * @param ssmParameterArns List of SSM Parameter ARNs that contain AMI IDs launched by Karpenter. If not provided,
         * the default ARN &#34;arn:aws:ssm:*:*:parameter/aws/service/*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder ssmParameterArns(@Nullable Output<List<String>> ssmParameterArns) {
            $.ssmParameterArns = ssmParameterArns;
            return this;
        }

        /**
         * @param ssmParameterArns List of SSM Parameter ARNs that contain AMI IDs launched by Karpenter. If not provided,
         * the default ARN &#34;arn:aws:ssm:*:*:parameter/aws/service/*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder ssmParameterArns(List<String> ssmParameterArns) {
            return ssmParameterArns(Output.of(ssmParameterArns));
        }

        /**
         * @param ssmParameterArns List of SSM Parameter ARNs that contain AMI IDs launched by Karpenter. If not provided,
         * the default ARN &#34;arn:aws:ssm:*:*:parameter/aws/service/*&#34; will be applied.
         * 
         * @return builder
         * 
         */
        public Builder ssmParameterArns(String... ssmParameterArns) {
            return ssmParameterArns(List.of(ssmParameterArns));
        }

        /**
         * @param subnetAccountId Account ID of where the subnets Karpenter will utilize resides. Used when subnets are shared from another account.
         * 
         * @return builder
         * 
         */
        public Builder subnetAccountId(@Nullable Output<String> subnetAccountId) {
            $.subnetAccountId = subnetAccountId;
            return this;
        }

        /**
         * @param subnetAccountId Account ID of where the subnets Karpenter will utilize resides. Used when subnets are shared from another account.
         * 
         * @return builder
         * 
         */
        public Builder subnetAccountId(String subnetAccountId) {
            return subnetAccountId(Output.of(subnetAccountId));
        }

        /**
         * @param tagKey Tag key (`{key = value}`) applied to resources launched by Karpenter through the Karpenter provisioner.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(@Nullable Output<String> tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        /**
         * @param tagKey Tag key (`{key = value}`) applied to resources launched by Karpenter through the Karpenter provisioner.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(String tagKey) {
            return tagKey(Output.of(tagKey));
        }

        public EKSKarpenterControllerPolicyArgs build() {
            $.attach = Objects.requireNonNull($.attach, "expected parameter 'attach' to be non-null");
            $.clusterId = Codegen.stringProp("clusterId").output().arg($.clusterId).def("*").getNullable();
            $.tagKey = Codegen.stringProp("tagKey").output().arg($.tagKey).def("karpenter.sh/discovery").getNullable();
            return $;
        }
    }

}
