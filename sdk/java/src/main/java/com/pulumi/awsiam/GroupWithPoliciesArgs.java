// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupWithPoliciesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupWithPoliciesArgs Empty = new GroupWithPoliciesArgs();

    /**
     * Whether to attach IAM policy which allows IAM users to manage their credentials and MFA.
     * 
     */
    @Import(name="attachIamSelfManagementPolicy")
    private @Nullable Output<Boolean> attachIamSelfManagementPolicy;

    /**
     * @return Whether to attach IAM policy which allows IAM users to manage their credentials and MFA.
     * 
     */
    public Optional<Output<Boolean>> attachIamSelfManagementPolicy() {
        return Optional.ofNullable(this.attachIamSelfManagementPolicy);
    }

    /**
     * AWS account id to use inside IAM policies. If empty, current AWS account ID will be used.
     * 
     */
    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    /**
     * @return AWS account id to use inside IAM policies. If empty, current AWS account ID will be used.
     * 
     */
    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element.
     * 
     */
    @Import(name="customGroupPolicies")
    private @Nullable Output<List<Map<String,String>>> customGroupPolicies;

    /**
     * @return List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element.
     * 
     */
    public Optional<Output<List<Map<String,String>>>> customGroupPolicies() {
        return Optional.ofNullable(this.customGroupPolicies);
    }

    /**
     * List of IAM policies ARNs to attach to IAM group.
     * 
     */
    @Import(name="customGroupPolicyArns")
    private @Nullable Output<List<String>> customGroupPolicyArns;

    /**
     * @return List of IAM policies ARNs to attach to IAM group.
     * 
     */
    public Optional<Output<List<String>>> customGroupPolicyArns() {
        return Optional.ofNullable(this.customGroupPolicyArns);
    }

    /**
     * List of IAM users to have in an IAM group which can assume the role.
     * 
     */
    @Import(name="groupUsers", required=true)
    private Output<List<String>> groupUsers;

    /**
     * @return List of IAM users to have in an IAM group which can assume the role.
     * 
     */
    public Output<List<String>> groupUsers() {
        return this.groupUsers;
    }

    /**
     * Name prefix for IAM policy to create with IAM self-management permissions.
     * 
     */
    @Import(name="iamSelfManagementPolicyNamePrefix")
    private @Nullable Output<String> iamSelfManagementPolicyNamePrefix;

    /**
     * @return Name prefix for IAM policy to create with IAM self-management permissions.
     * 
     */
    public Optional<Output<String>> iamSelfManagementPolicyNamePrefix() {
        return Optional.ofNullable(this.iamSelfManagementPolicyNamePrefix);
    }

    /**
     * Name of IAM group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of IAM group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A map of tags to add.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to add.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GroupWithPoliciesArgs() {}

    private GroupWithPoliciesArgs(GroupWithPoliciesArgs $) {
        this.attachIamSelfManagementPolicy = $.attachIamSelfManagementPolicy;
        this.awsAccountId = $.awsAccountId;
        this.customGroupPolicies = $.customGroupPolicies;
        this.customGroupPolicyArns = $.customGroupPolicyArns;
        this.groupUsers = $.groupUsers;
        this.iamSelfManagementPolicyNamePrefix = $.iamSelfManagementPolicyNamePrefix;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupWithPoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupWithPoliciesArgs $;

        public Builder() {
            $ = new GroupWithPoliciesArgs();
        }

        public Builder(GroupWithPoliciesArgs defaults) {
            $ = new GroupWithPoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachIamSelfManagementPolicy Whether to attach IAM policy which allows IAM users to manage their credentials and MFA.
         * 
         * @return builder
         * 
         */
        public Builder attachIamSelfManagementPolicy(@Nullable Output<Boolean> attachIamSelfManagementPolicy) {
            $.attachIamSelfManagementPolicy = attachIamSelfManagementPolicy;
            return this;
        }

        /**
         * @param attachIamSelfManagementPolicy Whether to attach IAM policy which allows IAM users to manage their credentials and MFA.
         * 
         * @return builder
         * 
         */
        public Builder attachIamSelfManagementPolicy(Boolean attachIamSelfManagementPolicy) {
            return attachIamSelfManagementPolicy(Output.of(attachIamSelfManagementPolicy));
        }

        /**
         * @param awsAccountId AWS account id to use inside IAM policies. If empty, current AWS account ID will be used.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId AWS account id to use inside IAM policies. If empty, current AWS account ID will be used.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param customGroupPolicies List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicies(@Nullable Output<List<Map<String,String>>> customGroupPolicies) {
            $.customGroupPolicies = customGroupPolicies;
            return this;
        }

        /**
         * @param customGroupPolicies List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicies(List<Map<String,String>> customGroupPolicies) {
            return customGroupPolicies(Output.of(customGroupPolicies));
        }

        /**
         * @param customGroupPolicies List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicies(Map<String,String>... customGroupPolicies) {
            return customGroupPolicies(List.of(customGroupPolicies));
        }

        /**
         * @param customGroupPolicyArns List of IAM policies ARNs to attach to IAM group.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicyArns(@Nullable Output<List<String>> customGroupPolicyArns) {
            $.customGroupPolicyArns = customGroupPolicyArns;
            return this;
        }

        /**
         * @param customGroupPolicyArns List of IAM policies ARNs to attach to IAM group.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicyArns(List<String> customGroupPolicyArns) {
            return customGroupPolicyArns(Output.of(customGroupPolicyArns));
        }

        /**
         * @param customGroupPolicyArns List of IAM policies ARNs to attach to IAM group.
         * 
         * @return builder
         * 
         */
        public Builder customGroupPolicyArns(String... customGroupPolicyArns) {
            return customGroupPolicyArns(List.of(customGroupPolicyArns));
        }

        /**
         * @param groupUsers List of IAM users to have in an IAM group which can assume the role.
         * 
         * @return builder
         * 
         */
        public Builder groupUsers(Output<List<String>> groupUsers) {
            $.groupUsers = groupUsers;
            return this;
        }

        /**
         * @param groupUsers List of IAM users to have in an IAM group which can assume the role.
         * 
         * @return builder
         * 
         */
        public Builder groupUsers(List<String> groupUsers) {
            return groupUsers(Output.of(groupUsers));
        }

        /**
         * @param groupUsers List of IAM users to have in an IAM group which can assume the role.
         * 
         * @return builder
         * 
         */
        public Builder groupUsers(String... groupUsers) {
            return groupUsers(List.of(groupUsers));
        }

        /**
         * @param iamSelfManagementPolicyNamePrefix Name prefix for IAM policy to create with IAM self-management permissions.
         * 
         * @return builder
         * 
         */
        public Builder iamSelfManagementPolicyNamePrefix(@Nullable Output<String> iamSelfManagementPolicyNamePrefix) {
            $.iamSelfManagementPolicyNamePrefix = iamSelfManagementPolicyNamePrefix;
            return this;
        }

        /**
         * @param iamSelfManagementPolicyNamePrefix Name prefix for IAM policy to create with IAM self-management permissions.
         * 
         * @return builder
         * 
         */
        public Builder iamSelfManagementPolicyNamePrefix(String iamSelfManagementPolicyNamePrefix) {
            return iamSelfManagementPolicyNamePrefix(Output.of(iamSelfManagementPolicyNamePrefix));
        }

        /**
         * @param name Name of IAM group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of IAM group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A map of tags to add.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to add.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GroupWithPoliciesArgs build() {
            $.attachIamSelfManagementPolicy = Codegen.booleanProp("attachIamSelfManagementPolicy").output().arg($.attachIamSelfManagementPolicy).def(true).getNullable();
            $.awsAccountId = Codegen.stringProp("awsAccountId").output().arg($.awsAccountId).def("").getNullable();
            $.groupUsers = Objects.requireNonNull($.groupUsers, "expected parameter 'groupUsers' to be non-null");
            $.iamSelfManagementPolicyNamePrefix = Codegen.stringProp("iamSelfManagementPolicyNamePrefix").output().arg($.iamSelfManagementPolicyNamePrefix).def("IAMSelfManagement-").getNullable();
            $.name = Codegen.stringProp("name").output().arg($.name).def("").require();
            return $;
        }
    }

}
