// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReadOnlyPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReadOnlyPolicyArgs Empty = new ReadOnlyPolicyArgs();

    /**
     * JSON policy document if you want to add custom actions.
     * 
     */
    @Import(name="additionalPolicyJson")
    private @Nullable Output<String> additionalPolicyJson;

    /**
     * @return JSON policy document if you want to add custom actions.
     * 
     */
    public Optional<Output<String>> additionalPolicyJson() {
        return Optional.ofNullable(this.additionalPolicyJson);
    }

    /**
     * Allows StartQuery/StopQuery/FilterLogEvents CloudWatch actions.
     * 
     */
    @Import(name="allowCloudwatchLogsQuery")
    private @Nullable Output<Boolean> allowCloudwatchLogsQuery;

    /**
     * @return Allows StartQuery/StopQuery/FilterLogEvents CloudWatch actions.
     * 
     */
    public Optional<Output<Boolean>> allowCloudwatchLogsQuery() {
        return Optional.ofNullable(this.allowCloudwatchLogsQuery);
    }

    /**
     * Allows GetCallerIdentity/GetSessionToken/GetAccessKeyInfo sts actions.
     * 
     */
    @Import(name="allowPredefinedStsActions")
    private @Nullable Output<Boolean> allowPredefinedStsActions;

    /**
     * @return Allows GetCallerIdentity/GetSessionToken/GetAccessKeyInfo sts actions.
     * 
     */
    public Optional<Output<Boolean>> allowPredefinedStsActions() {
        return Optional.ofNullable(this.allowPredefinedStsActions);
    }

    /**
     * Allows List/Get/Describe/View actions for services used when browsing AWS console (e.g. resource-groups, tag, health services).
     * 
     */
    @Import(name="allowWebConsoleServices")
    private @Nullable Output<Boolean> allowWebConsoleServices;

    /**
     * @return Allows List/Get/Describe/View actions for services used when browsing AWS console (e.g. resource-groups, tag, health services).
     * 
     */
    public Optional<Output<Boolean>> allowWebConsoleServices() {
        return Optional.ofNullable(this.allowWebConsoleServices);
    }

    /**
     * List of services to allow Get/List/Describe/View options. Service name should be the same as corresponding service IAM prefix. See what it is for each service here https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html.
     * 
     */
    @Import(name="allowedServices")
    private @Nullable Output<List<String>> allowedServices;

    /**
     * @return List of services to allow Get/List/Describe/View options. Service name should be the same as corresponding service IAM prefix. See what it is for each service here https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html.
     * 
     */
    public Optional<Output<List<String>>> allowedServices() {
        return Optional.ofNullable(this.allowedServices);
    }

    /**
     * The description of the policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the policy.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The path of the policy in IAM.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The path of the policy in IAM.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * A map of tags to add.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to add.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * List of web console services to allow.
     * 
     */
    @Import(name="webConsoleServices")
    private @Nullable Output<List<String>> webConsoleServices;

    /**
     * @return List of web console services to allow.
     * 
     */
    public Optional<Output<List<String>>> webConsoleServices() {
        return Optional.ofNullable(this.webConsoleServices);
    }

    private ReadOnlyPolicyArgs() {}

    private ReadOnlyPolicyArgs(ReadOnlyPolicyArgs $) {
        this.additionalPolicyJson = $.additionalPolicyJson;
        this.allowCloudwatchLogsQuery = $.allowCloudwatchLogsQuery;
        this.allowPredefinedStsActions = $.allowPredefinedStsActions;
        this.allowWebConsoleServices = $.allowWebConsoleServices;
        this.allowedServices = $.allowedServices;
        this.description = $.description;
        this.name = $.name;
        this.path = $.path;
        this.tags = $.tags;
        this.webConsoleServices = $.webConsoleServices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReadOnlyPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReadOnlyPolicyArgs $;

        public Builder() {
            $ = new ReadOnlyPolicyArgs();
        }

        public Builder(ReadOnlyPolicyArgs defaults) {
            $ = new ReadOnlyPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalPolicyJson JSON policy document if you want to add custom actions.
         * 
         * @return builder
         * 
         */
        public Builder additionalPolicyJson(@Nullable Output<String> additionalPolicyJson) {
            $.additionalPolicyJson = additionalPolicyJson;
            return this;
        }

        /**
         * @param additionalPolicyJson JSON policy document if you want to add custom actions.
         * 
         * @return builder
         * 
         */
        public Builder additionalPolicyJson(String additionalPolicyJson) {
            return additionalPolicyJson(Output.of(additionalPolicyJson));
        }

        /**
         * @param allowCloudwatchLogsQuery Allows StartQuery/StopQuery/FilterLogEvents CloudWatch actions.
         * 
         * @return builder
         * 
         */
        public Builder allowCloudwatchLogsQuery(@Nullable Output<Boolean> allowCloudwatchLogsQuery) {
            $.allowCloudwatchLogsQuery = allowCloudwatchLogsQuery;
            return this;
        }

        /**
         * @param allowCloudwatchLogsQuery Allows StartQuery/StopQuery/FilterLogEvents CloudWatch actions.
         * 
         * @return builder
         * 
         */
        public Builder allowCloudwatchLogsQuery(Boolean allowCloudwatchLogsQuery) {
            return allowCloudwatchLogsQuery(Output.of(allowCloudwatchLogsQuery));
        }

        /**
         * @param allowPredefinedStsActions Allows GetCallerIdentity/GetSessionToken/GetAccessKeyInfo sts actions.
         * 
         * @return builder
         * 
         */
        public Builder allowPredefinedStsActions(@Nullable Output<Boolean> allowPredefinedStsActions) {
            $.allowPredefinedStsActions = allowPredefinedStsActions;
            return this;
        }

        /**
         * @param allowPredefinedStsActions Allows GetCallerIdentity/GetSessionToken/GetAccessKeyInfo sts actions.
         * 
         * @return builder
         * 
         */
        public Builder allowPredefinedStsActions(Boolean allowPredefinedStsActions) {
            return allowPredefinedStsActions(Output.of(allowPredefinedStsActions));
        }

        /**
         * @param allowWebConsoleServices Allows List/Get/Describe/View actions for services used when browsing AWS console (e.g. resource-groups, tag, health services).
         * 
         * @return builder
         * 
         */
        public Builder allowWebConsoleServices(@Nullable Output<Boolean> allowWebConsoleServices) {
            $.allowWebConsoleServices = allowWebConsoleServices;
            return this;
        }

        /**
         * @param allowWebConsoleServices Allows List/Get/Describe/View actions for services used when browsing AWS console (e.g. resource-groups, tag, health services).
         * 
         * @return builder
         * 
         */
        public Builder allowWebConsoleServices(Boolean allowWebConsoleServices) {
            return allowWebConsoleServices(Output.of(allowWebConsoleServices));
        }

        /**
         * @param allowedServices List of services to allow Get/List/Describe/View options. Service name should be the same as corresponding service IAM prefix. See what it is for each service here https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html.
         * 
         * @return builder
         * 
         */
        public Builder allowedServices(@Nullable Output<List<String>> allowedServices) {
            $.allowedServices = allowedServices;
            return this;
        }

        /**
         * @param allowedServices List of services to allow Get/List/Describe/View options. Service name should be the same as corresponding service IAM prefix. See what it is for each service here https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html.
         * 
         * @return builder
         * 
         */
        public Builder allowedServices(List<String> allowedServices) {
            return allowedServices(Output.of(allowedServices));
        }

        /**
         * @param allowedServices List of services to allow Get/List/Describe/View options. Service name should be the same as corresponding service IAM prefix. See what it is for each service here https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html.
         * 
         * @return builder
         * 
         */
        public Builder allowedServices(String... allowedServices) {
            return allowedServices(List.of(allowedServices));
        }

        /**
         * @param description The description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param path The path of the policy in IAM.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The path of the policy in IAM.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param tags A map of tags to add.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to add.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param webConsoleServices List of web console services to allow.
         * 
         * @return builder
         * 
         */
        public Builder webConsoleServices(@Nullable Output<List<String>> webConsoleServices) {
            $.webConsoleServices = webConsoleServices;
            return this;
        }

        /**
         * @param webConsoleServices List of web console services to allow.
         * 
         * @return builder
         * 
         */
        public Builder webConsoleServices(List<String> webConsoleServices) {
            return webConsoleServices(Output.of(webConsoleServices));
        }

        /**
         * @param webConsoleServices List of web console services to allow.
         * 
         * @return builder
         * 
         */
        public Builder webConsoleServices(String... webConsoleServices) {
            return webConsoleServices(List.of(webConsoleServices));
        }

        public ReadOnlyPolicyArgs build() {
            $.additionalPolicyJson = Codegen.stringProp("additionalPolicyJson").output().arg($.additionalPolicyJson).def("{}").getNullable();
            $.allowCloudwatchLogsQuery = Codegen.booleanProp("allowCloudwatchLogsQuery").output().arg($.allowCloudwatchLogsQuery).def(true).getNullable();
            $.allowPredefinedStsActions = Codegen.booleanProp("allowPredefinedStsActions").output().arg($.allowPredefinedStsActions).def(true).getNullable();
            $.allowWebConsoleServices = Codegen.booleanProp("allowWebConsoleServices").output().arg($.allowWebConsoleServices).def(true).getNullable();
            $.description = Codegen.stringProp("description").output().arg($.description).def("IAM Policy").getNullable();
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.path = Codegen.stringProp("path").output().arg($.path).def("/").getNullable();
            return $;
        }
    }

}
