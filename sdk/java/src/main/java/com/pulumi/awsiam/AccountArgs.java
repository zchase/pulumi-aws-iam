// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam;

import com.pulumi.awsiam.inputs.AccountPasswordPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * AWS IAM account alias for this account.
     * 
     */
    @Import(name="accountAlias", required=true)
    private Output<String> accountAlias;

    /**
     * @return AWS IAM account alias for this account.
     * 
     */
    public Output<String> accountAlias() {
        return this.accountAlias;
    }

    /**
     * Options to specify complexity requirements and mandatory rotation periods for your IAM users&#39; passwords. If
     * left empty the default AWS password policy will be applied.
     * 
     */
    @Import(name="passwordPolicy", required=true)
    private Output<AccountPasswordPolicyArgs> passwordPolicy;

    /**
     * @return Options to specify complexity requirements and mandatory rotation periods for your IAM users&#39; passwords. If
     * left empty the default AWS password policy will be applied.
     * 
     */
    public Output<AccountPasswordPolicyArgs> passwordPolicy() {
        return this.passwordPolicy;
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.accountAlias = $.accountAlias;
        this.passwordPolicy = $.passwordPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountAlias AWS IAM account alias for this account.
         * 
         * @return builder
         * 
         */
        public Builder accountAlias(Output<String> accountAlias) {
            $.accountAlias = accountAlias;
            return this;
        }

        /**
         * @param accountAlias AWS IAM account alias for this account.
         * 
         * @return builder
         * 
         */
        public Builder accountAlias(String accountAlias) {
            return accountAlias(Output.of(accountAlias));
        }

        /**
         * @param passwordPolicy Options to specify complexity requirements and mandatory rotation periods for your IAM users&#39; passwords. If
         * left empty the default AWS password policy will be applied.
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicy(Output<AccountPasswordPolicyArgs> passwordPolicy) {
            $.passwordPolicy = passwordPolicy;
            return this;
        }

        /**
         * @param passwordPolicy Options to specify complexity requirements and mandatory rotation periods for your IAM users&#39; passwords. If
         * left empty the default AWS password policy will be applied.
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicy(AccountPasswordPolicyArgs passwordPolicy) {
            return passwordPolicy(Output.of(passwordPolicy));
        }

        public AccountArgs build() {
            $.accountAlias = Objects.requireNonNull($.accountAlias, "expected parameter 'accountAlias' to be non-null");
            $.passwordPolicy = Objects.requireNonNull($.passwordPolicy, "expected parameter 'passwordPolicy' to be non-null");
            return $;
        }
    }

}
