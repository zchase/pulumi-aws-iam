// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam.inputs;

import com.pulumi.awsiam.inputs.EKSAmazonManagedServicePrometheusPolicyArgs;
import com.pulumi.awsiam.inputs.EKSAppmeshPolicyArgs;
import com.pulumi.awsiam.inputs.EKSCertManagerPolicyArgs;
import com.pulumi.awsiam.inputs.EKSClusterAutoscalerPolicyArgs;
import com.pulumi.awsiam.inputs.EKSEBSCSIPolicyArgs;
import com.pulumi.awsiam.inputs.EKSEFSCSIPolicyArgs;
import com.pulumi.awsiam.inputs.EKSExternalDNSPolicyArgs;
import com.pulumi.awsiam.inputs.EKSExternalSecretsPolicyArgs;
import com.pulumi.awsiam.inputs.EKSKarpenterControllerPolicyArgs;
import com.pulumi.awsiam.inputs.EKSLoadBalancerPolicyArgs;
import com.pulumi.awsiam.inputs.EKSNodeTerminationHandlerPolicyArgs;
import com.pulumi.awsiam.inputs.EKSVPNCNIPolicyArgs;
import com.pulumi.awsiam.inputs.EKSVeleroPolicyArgs;
import com.pulumi.awsiam.inputs.FSxLustreCSIPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The different policies to attach to the role.
 * 
 */
public final class EKSRolePoliciesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EKSRolePoliciesArgs Empty = new EKSRolePoliciesArgs();

    /**
     * The Amazon Managed Service for Prometheus IAM policy.
     * 
     */
    @Import(name="amazonManagedServicePrometheus")
    private @Nullable Output<EKSAmazonManagedServicePrometheusPolicyArgs> amazonManagedServicePrometheus;

    /**
     * @return The Amazon Managed Service for Prometheus IAM policy.
     * 
     */
    public Optional<Output<EKSAmazonManagedServicePrometheusPolicyArgs>> amazonManagedServicePrometheus() {
        return Optional.ofNullable(this.amazonManagedServicePrometheus);
    }

    /**
     * The Appmesh policies.
     * 
     */
    @Import(name="appmesh")
    private @Nullable Output<EKSAppmeshPolicyArgs> appmesh;

    /**
     * @return The Appmesh policies.
     * 
     */
    public Optional<Output<EKSAppmeshPolicyArgs>> appmesh() {
        return Optional.ofNullable(this.appmesh);
    }

    /**
     * The Cert Manager IAM policy.
     * 
     */
    @Import(name="certManager")
    private @Nullable Output<EKSCertManagerPolicyArgs> certManager;

    /**
     * @return The Cert Manager IAM policy.
     * 
     */
    public Optional<Output<EKSCertManagerPolicyArgs>> certManager() {
        return Optional.ofNullable(this.certManager);
    }

    /**
     * The Cluster Autoscaler IAM policy.
     * 
     */
    @Import(name="clusterAutoScaling")
    private @Nullable Output<EKSClusterAutoscalerPolicyArgs> clusterAutoScaling;

    /**
     * @return The Cluster Autoscaler IAM policy.
     * 
     */
    public Optional<Output<EKSClusterAutoscalerPolicyArgs>> clusterAutoScaling() {
        return Optional.ofNullable(this.clusterAutoScaling);
    }

    /**
     * The EBS CSI IAM policy.
     * 
     */
    @Import(name="ebsCsi")
    private @Nullable Output<EKSEBSCSIPolicyArgs> ebsCsi;

    /**
     * @return The EBS CSI IAM policy.
     * 
     */
    public Optional<Output<EKSEBSCSIPolicyArgs>> ebsCsi() {
        return Optional.ofNullable(this.ebsCsi);
    }

    /**
     * The EFS CSI IAM policy.
     * 
     */
    @Import(name="efsCsi")
    private @Nullable Output<EKSEFSCSIPolicyArgs> efsCsi;

    /**
     * @return The EFS CSI IAM policy.
     * 
     */
    public Optional<Output<EKSEFSCSIPolicyArgs>> efsCsi() {
        return Optional.ofNullable(this.efsCsi);
    }

    /**
     * The External DNS IAM policy.
     * 
     */
    @Import(name="externalDns")
    private @Nullable Output<EKSExternalDNSPolicyArgs> externalDns;

    /**
     * @return The External DNS IAM policy.
     * 
     */
    public Optional<Output<EKSExternalDNSPolicyArgs>> externalDns() {
        return Optional.ofNullable(this.externalDns);
    }

    /**
     * The External Secrets policy.
     * 
     */
    @Import(name="externalSecrets")
    private @Nullable Output<EKSExternalSecretsPolicyArgs> externalSecrets;

    /**
     * @return The External Secrets policy.
     * 
     */
    public Optional<Output<EKSExternalSecretsPolicyArgs>> externalSecrets() {
        return Optional.ofNullable(this.externalSecrets);
    }

    /**
     * The FSx for Lustre CSI Driver IAM policy.
     * 
     */
    @Import(name="fsxLustreCsi")
    private @Nullable Output<FSxLustreCSIPolicyArgs> fsxLustreCsi;

    /**
     * @return The FSx for Lustre CSI Driver IAM policy.
     * 
     */
    public Optional<Output<FSxLustreCSIPolicyArgs>> fsxLustreCsi() {
        return Optional.ofNullable(this.fsxLustreCsi);
    }

    /**
     * The Karpenter Controller policy.
     * 
     */
    @Import(name="karpenterController")
    private @Nullable Output<EKSKarpenterControllerPolicyArgs> karpenterController;

    /**
     * @return The Karpenter Controller policy.
     * 
     */
    public Optional<Output<EKSKarpenterControllerPolicyArgs>> karpenterController() {
        return Optional.ofNullable(this.karpenterController);
    }

    /**
     * The Load Balancer policy.
     * 
     */
    @Import(name="loadBalancer")
    private @Nullable Output<EKSLoadBalancerPolicyArgs> loadBalancer;

    /**
     * @return The Load Balancer policy.
     * 
     */
    public Optional<Output<EKSLoadBalancerPolicyArgs>> loadBalancer() {
        return Optional.ofNullable(this.loadBalancer);
    }

    /**
     * The Node Termination Handler policy to the role.
     * 
     */
    @Import(name="nodeTerminationHandler")
    private @Nullable Output<EKSNodeTerminationHandlerPolicyArgs> nodeTerminationHandler;

    /**
     * @return The Node Termination Handler policy to the role.
     * 
     */
    public Optional<Output<EKSNodeTerminationHandlerPolicyArgs>> nodeTerminationHandler() {
        return Optional.ofNullable(this.nodeTerminationHandler);
    }

    /**
     * The Velero IAM policy.
     * 
     */
    @Import(name="velero")
    private @Nullable Output<EKSVeleroPolicyArgs> velero;

    /**
     * @return The Velero IAM policy.
     * 
     */
    public Optional<Output<EKSVeleroPolicyArgs>> velero() {
        return Optional.ofNullable(this.velero);
    }

    /**
     * The VPC CNI IAM policy to the role.
     * 
     */
    @Import(name="vpnCni")
    private @Nullable Output<EKSVPNCNIPolicyArgs> vpnCni;

    /**
     * @return The VPC CNI IAM policy to the role.
     * 
     */
    public Optional<Output<EKSVPNCNIPolicyArgs>> vpnCni() {
        return Optional.ofNullable(this.vpnCni);
    }

    private EKSRolePoliciesArgs() {}

    private EKSRolePoliciesArgs(EKSRolePoliciesArgs $) {
        this.amazonManagedServicePrometheus = $.amazonManagedServicePrometheus;
        this.appmesh = $.appmesh;
        this.certManager = $.certManager;
        this.clusterAutoScaling = $.clusterAutoScaling;
        this.ebsCsi = $.ebsCsi;
        this.efsCsi = $.efsCsi;
        this.externalDns = $.externalDns;
        this.externalSecrets = $.externalSecrets;
        this.fsxLustreCsi = $.fsxLustreCsi;
        this.karpenterController = $.karpenterController;
        this.loadBalancer = $.loadBalancer;
        this.nodeTerminationHandler = $.nodeTerminationHandler;
        this.velero = $.velero;
        this.vpnCni = $.vpnCni;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EKSRolePoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EKSRolePoliciesArgs $;

        public Builder() {
            $ = new EKSRolePoliciesArgs();
        }

        public Builder(EKSRolePoliciesArgs defaults) {
            $ = new EKSRolePoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazonManagedServicePrometheus The Amazon Managed Service for Prometheus IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder amazonManagedServicePrometheus(@Nullable Output<EKSAmazonManagedServicePrometheusPolicyArgs> amazonManagedServicePrometheus) {
            $.amazonManagedServicePrometheus = amazonManagedServicePrometheus;
            return this;
        }

        /**
         * @param amazonManagedServicePrometheus The Amazon Managed Service for Prometheus IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder amazonManagedServicePrometheus(EKSAmazonManagedServicePrometheusPolicyArgs amazonManagedServicePrometheus) {
            return amazonManagedServicePrometheus(Output.of(amazonManagedServicePrometheus));
        }

        /**
         * @param appmesh The Appmesh policies.
         * 
         * @return builder
         * 
         */
        public Builder appmesh(@Nullable Output<EKSAppmeshPolicyArgs> appmesh) {
            $.appmesh = appmesh;
            return this;
        }

        /**
         * @param appmesh The Appmesh policies.
         * 
         * @return builder
         * 
         */
        public Builder appmesh(EKSAppmeshPolicyArgs appmesh) {
            return appmesh(Output.of(appmesh));
        }

        /**
         * @param certManager The Cert Manager IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder certManager(@Nullable Output<EKSCertManagerPolicyArgs> certManager) {
            $.certManager = certManager;
            return this;
        }

        /**
         * @param certManager The Cert Manager IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder certManager(EKSCertManagerPolicyArgs certManager) {
            return certManager(Output.of(certManager));
        }

        /**
         * @param clusterAutoScaling The Cluster Autoscaler IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder clusterAutoScaling(@Nullable Output<EKSClusterAutoscalerPolicyArgs> clusterAutoScaling) {
            $.clusterAutoScaling = clusterAutoScaling;
            return this;
        }

        /**
         * @param clusterAutoScaling The Cluster Autoscaler IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder clusterAutoScaling(EKSClusterAutoscalerPolicyArgs clusterAutoScaling) {
            return clusterAutoScaling(Output.of(clusterAutoScaling));
        }

        /**
         * @param ebsCsi The EBS CSI IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder ebsCsi(@Nullable Output<EKSEBSCSIPolicyArgs> ebsCsi) {
            $.ebsCsi = ebsCsi;
            return this;
        }

        /**
         * @param ebsCsi The EBS CSI IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder ebsCsi(EKSEBSCSIPolicyArgs ebsCsi) {
            return ebsCsi(Output.of(ebsCsi));
        }

        /**
         * @param efsCsi The EFS CSI IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder efsCsi(@Nullable Output<EKSEFSCSIPolicyArgs> efsCsi) {
            $.efsCsi = efsCsi;
            return this;
        }

        /**
         * @param efsCsi The EFS CSI IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder efsCsi(EKSEFSCSIPolicyArgs efsCsi) {
            return efsCsi(Output.of(efsCsi));
        }

        /**
         * @param externalDns The External DNS IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder externalDns(@Nullable Output<EKSExternalDNSPolicyArgs> externalDns) {
            $.externalDns = externalDns;
            return this;
        }

        /**
         * @param externalDns The External DNS IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder externalDns(EKSExternalDNSPolicyArgs externalDns) {
            return externalDns(Output.of(externalDns));
        }

        /**
         * @param externalSecrets The External Secrets policy.
         * 
         * @return builder
         * 
         */
        public Builder externalSecrets(@Nullable Output<EKSExternalSecretsPolicyArgs> externalSecrets) {
            $.externalSecrets = externalSecrets;
            return this;
        }

        /**
         * @param externalSecrets The External Secrets policy.
         * 
         * @return builder
         * 
         */
        public Builder externalSecrets(EKSExternalSecretsPolicyArgs externalSecrets) {
            return externalSecrets(Output.of(externalSecrets));
        }

        /**
         * @param fsxLustreCsi The FSx for Lustre CSI Driver IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder fsxLustreCsi(@Nullable Output<FSxLustreCSIPolicyArgs> fsxLustreCsi) {
            $.fsxLustreCsi = fsxLustreCsi;
            return this;
        }

        /**
         * @param fsxLustreCsi The FSx for Lustre CSI Driver IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder fsxLustreCsi(FSxLustreCSIPolicyArgs fsxLustreCsi) {
            return fsxLustreCsi(Output.of(fsxLustreCsi));
        }

        /**
         * @param karpenterController The Karpenter Controller policy.
         * 
         * @return builder
         * 
         */
        public Builder karpenterController(@Nullable Output<EKSKarpenterControllerPolicyArgs> karpenterController) {
            $.karpenterController = karpenterController;
            return this;
        }

        /**
         * @param karpenterController The Karpenter Controller policy.
         * 
         * @return builder
         * 
         */
        public Builder karpenterController(EKSKarpenterControllerPolicyArgs karpenterController) {
            return karpenterController(Output.of(karpenterController));
        }

        /**
         * @param loadBalancer The Load Balancer policy.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancer(@Nullable Output<EKSLoadBalancerPolicyArgs> loadBalancer) {
            $.loadBalancer = loadBalancer;
            return this;
        }

        /**
         * @param loadBalancer The Load Balancer policy.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancer(EKSLoadBalancerPolicyArgs loadBalancer) {
            return loadBalancer(Output.of(loadBalancer));
        }

        /**
         * @param nodeTerminationHandler The Node Termination Handler policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder nodeTerminationHandler(@Nullable Output<EKSNodeTerminationHandlerPolicyArgs> nodeTerminationHandler) {
            $.nodeTerminationHandler = nodeTerminationHandler;
            return this;
        }

        /**
         * @param nodeTerminationHandler The Node Termination Handler policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder nodeTerminationHandler(EKSNodeTerminationHandlerPolicyArgs nodeTerminationHandler) {
            return nodeTerminationHandler(Output.of(nodeTerminationHandler));
        }

        /**
         * @param velero The Velero IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder velero(@Nullable Output<EKSVeleroPolicyArgs> velero) {
            $.velero = velero;
            return this;
        }

        /**
         * @param velero The Velero IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder velero(EKSVeleroPolicyArgs velero) {
            return velero(Output.of(velero));
        }

        /**
         * @param vpnCni The VPC CNI IAM policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder vpnCni(@Nullable Output<EKSVPNCNIPolicyArgs> vpnCni) {
            $.vpnCni = vpnCni;
            return this;
        }

        /**
         * @param vpnCni The VPC CNI IAM policy to the role.
         * 
         * @return builder
         * 
         */
        public Builder vpnCni(EKSVPNCNIPolicyArgs vpnCni) {
            return vpnCni(Output.of(vpnCni));
        }

        public EKSRolePoliciesArgs build() {
            return $;
        }
    }

}
