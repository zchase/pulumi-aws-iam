// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EKSServiceAccountRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EKSServiceAccountRoleArgs Empty = new EKSServiceAccountRoleArgs();

    /**
     * IAM Role description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return IAM Role description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * IAM role name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return IAM role name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * IAM role name prefix.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return IAM role name prefix.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * Path of admin IAM role.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path of admin IAM role.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Permissions boundary ARN to use for the role.
     * 
     */
    @Import(name="permissionsBoundaryArn")
    private @Nullable Output<String> permissionsBoundaryArn;

    /**
     * @return Permissions boundary ARN to use for the role.
     * 
     */
    public Optional<Output<String>> permissionsBoundaryArn() {
        return Optional.ofNullable(this.permissionsBoundaryArn);
    }

    /**
     * List of policy ARNs to use for the role.
     * 
     */
    @Import(name="policyArns")
    private @Nullable Output<List<String>> policyArns;

    /**
     * @return List of policy ARNs to use for the role.
     * 
     */
    public Optional<Output<List<String>>> policyArns() {
        return Optional.ofNullable(this.policyArns);
    }

    private EKSServiceAccountRoleArgs() {}

    private EKSServiceAccountRoleArgs(EKSServiceAccountRoleArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.path = $.path;
        this.permissionsBoundaryArn = $.permissionsBoundaryArn;
        this.policyArns = $.policyArns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EKSServiceAccountRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EKSServiceAccountRoleArgs $;

        public Builder() {
            $ = new EKSServiceAccountRoleArgs();
        }

        public Builder(EKSServiceAccountRoleArgs defaults) {
            $ = new EKSServiceAccountRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description IAM Role description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description IAM Role description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name IAM role name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name IAM role name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePrefix IAM role name prefix.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix IAM role name prefix.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param path Path of admin IAM role.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path of admin IAM role.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param permissionsBoundaryArn Permissions boundary ARN to use for the role.
         * 
         * @return builder
         * 
         */
        public Builder permissionsBoundaryArn(@Nullable Output<String> permissionsBoundaryArn) {
            $.permissionsBoundaryArn = permissionsBoundaryArn;
            return this;
        }

        /**
         * @param permissionsBoundaryArn Permissions boundary ARN to use for the role.
         * 
         * @return builder
         * 
         */
        public Builder permissionsBoundaryArn(String permissionsBoundaryArn) {
            return permissionsBoundaryArn(Output.of(permissionsBoundaryArn));
        }

        /**
         * @param policyArns List of policy ARNs to use for the role.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(@Nullable Output<List<String>> policyArns) {
            $.policyArns = policyArns;
            return this;
        }

        /**
         * @param policyArns List of policy ARNs to use for the role.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(List<String> policyArns) {
            return policyArns(Output.of(policyArns));
        }

        /**
         * @param policyArns List of policy ARNs to use for the role.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(String... policyArns) {
            return policyArns(List.of(policyArns));
        }

        public EKSServiceAccountRoleArgs build() {
            $.name = Codegen.stringProp("name").output().arg($.name).def("").getNullable();
            $.namePrefix = Codegen.stringProp("namePrefix").output().arg($.namePrefix).def("").getNullable();
            $.path = Codegen.stringProp("path").output().arg($.path).def("/").getNullable();
            $.permissionsBoundaryArn = Codegen.stringProp("permissionsBoundaryArn").output().arg($.permissionsBoundaryArn).def("").getNullable();
            return $;
        }
    }

}
