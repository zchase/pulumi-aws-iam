// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam;

import com.pulumi.awsiam.inputs.AdminRoleArgs;
import com.pulumi.awsiam.inputs.PoweruserRoleArgs;
import com.pulumi.awsiam.inputs.ReadonlyRoleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssumableRolesWithSAMLArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssumableRolesWithSAMLArgs Empty = new AssumableRolesWithSAMLArgs();

    @Import(name="admin")
    private @Nullable Output<AdminRoleArgs> admin;

    public Optional<Output<AdminRoleArgs>> admin() {
        return Optional.ofNullable(this.admin);
    }

    /**
     * AWS SAML Endpoint.
     * 
     */
    @Import(name="awsSamlEndpoint")
    private @Nullable Output<String> awsSamlEndpoint;

    /**
     * @return AWS SAML Endpoint.
     * 
     */
    public Optional<Output<String>> awsSamlEndpoint() {
        return Optional.ofNullable(this.awsSamlEndpoint);
    }

    /**
     * Whether policies should be detached from this role when destroying.
     * 
     */
    @Import(name="forceDetachPolicies")
    private @Nullable Output<Boolean> forceDetachPolicies;

    /**
     * @return Whether policies should be detached from this role when destroying.
     * 
     */
    public Optional<Output<Boolean>> forceDetachPolicies() {
        return Optional.ofNullable(this.forceDetachPolicies);
    }

    /**
     * Maximum CLI/API session duration in seconds between 3600 and 43200.
     * 
     */
    @Import(name="maxSessionDuration")
    private @Nullable Output<Integer> maxSessionDuration;

    /**
     * @return Maximum CLI/API session duration in seconds between 3600 and 43200.
     * 
     */
    public Optional<Output<Integer>> maxSessionDuration() {
        return Optional.ofNullable(this.maxSessionDuration);
    }

    @Import(name="poweruser")
    private @Nullable Output<PoweruserRoleArgs> poweruser;

    public Optional<Output<PoweruserRoleArgs>> poweruser() {
        return Optional.ofNullable(this.poweruser);
    }

    /**
     * List of SAML Provider IDs.
     * 
     */
    @Import(name="providerIds")
    private @Nullable Output<List<String>> providerIds;

    /**
     * @return List of SAML Provider IDs.
     * 
     */
    public Optional<Output<List<String>>> providerIds() {
        return Optional.ofNullable(this.providerIds);
    }

    @Import(name="readonly")
    private @Nullable Output<ReadonlyRoleArgs> readonly;

    public Optional<Output<ReadonlyRoleArgs>> readonly() {
        return Optional.ofNullable(this.readonly);
    }

    private AssumableRolesWithSAMLArgs() {}

    private AssumableRolesWithSAMLArgs(AssumableRolesWithSAMLArgs $) {
        this.admin = $.admin;
        this.awsSamlEndpoint = $.awsSamlEndpoint;
        this.forceDetachPolicies = $.forceDetachPolicies;
        this.maxSessionDuration = $.maxSessionDuration;
        this.poweruser = $.poweruser;
        this.providerIds = $.providerIds;
        this.readonly = $.readonly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssumableRolesWithSAMLArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssumableRolesWithSAMLArgs $;

        public Builder() {
            $ = new AssumableRolesWithSAMLArgs();
        }

        public Builder(AssumableRolesWithSAMLArgs defaults) {
            $ = new AssumableRolesWithSAMLArgs(Objects.requireNonNull(defaults));
        }

        public Builder admin(@Nullable Output<AdminRoleArgs> admin) {
            $.admin = admin;
            return this;
        }

        public Builder admin(AdminRoleArgs admin) {
            return admin(Output.of(admin));
        }

        /**
         * @param awsSamlEndpoint AWS SAML Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder awsSamlEndpoint(@Nullable Output<String> awsSamlEndpoint) {
            $.awsSamlEndpoint = awsSamlEndpoint;
            return this;
        }

        /**
         * @param awsSamlEndpoint AWS SAML Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder awsSamlEndpoint(String awsSamlEndpoint) {
            return awsSamlEndpoint(Output.of(awsSamlEndpoint));
        }

        /**
         * @param forceDetachPolicies Whether policies should be detached from this role when destroying.
         * 
         * @return builder
         * 
         */
        public Builder forceDetachPolicies(@Nullable Output<Boolean> forceDetachPolicies) {
            $.forceDetachPolicies = forceDetachPolicies;
            return this;
        }

        /**
         * @param forceDetachPolicies Whether policies should be detached from this role when destroying.
         * 
         * @return builder
         * 
         */
        public Builder forceDetachPolicies(Boolean forceDetachPolicies) {
            return forceDetachPolicies(Output.of(forceDetachPolicies));
        }

        /**
         * @param maxSessionDuration Maximum CLI/API session duration in seconds between 3600 and 43200.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(@Nullable Output<Integer> maxSessionDuration) {
            $.maxSessionDuration = maxSessionDuration;
            return this;
        }

        /**
         * @param maxSessionDuration Maximum CLI/API session duration in seconds between 3600 and 43200.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(Integer maxSessionDuration) {
            return maxSessionDuration(Output.of(maxSessionDuration));
        }

        public Builder poweruser(@Nullable Output<PoweruserRoleArgs> poweruser) {
            $.poweruser = poweruser;
            return this;
        }

        public Builder poweruser(PoweruserRoleArgs poweruser) {
            return poweruser(Output.of(poweruser));
        }

        /**
         * @param providerIds List of SAML Provider IDs.
         * 
         * @return builder
         * 
         */
        public Builder providerIds(@Nullable Output<List<String>> providerIds) {
            $.providerIds = providerIds;
            return this;
        }

        /**
         * @param providerIds List of SAML Provider IDs.
         * 
         * @return builder
         * 
         */
        public Builder providerIds(List<String> providerIds) {
            return providerIds(Output.of(providerIds));
        }

        /**
         * @param providerIds List of SAML Provider IDs.
         * 
         * @return builder
         * 
         */
        public Builder providerIds(String... providerIds) {
            return providerIds(List.of(providerIds));
        }

        public Builder readonly(@Nullable Output<ReadonlyRoleArgs> readonly) {
            $.readonly = readonly;
            return this;
        }

        public Builder readonly(ReadonlyRoleArgs readonly) {
            return readonly(Output.of(readonly));
        }

        public AssumableRolesWithSAMLArgs build() {
            $.awsSamlEndpoint = Codegen.stringProp("awsSamlEndpoint").output().arg($.awsSamlEndpoint).def("https://signin.aws.amazon.com/saml").getNullable();
            $.forceDetachPolicies = Codegen.booleanProp("forceDetachPolicies").output().arg($.forceDetachPolicies).def(false).getNullable();
            $.maxSessionDuration = Codegen.integerProp("maxSessionDuration").output().arg($.maxSessionDuration).def(3600).getNullable();
            return $;
        }
    }

}
