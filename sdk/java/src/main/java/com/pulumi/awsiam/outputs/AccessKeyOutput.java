// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsiam.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessKeyOutput {
    /**
     * @return The encrypted secret, base64 encoded.
     * 
     */
    private final @Nullable String encryptedSecret;
    /**
     * @return The access key ID.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The fingerprint of the PGP key used to encrypt the secret.
     * 
     */
    private final @Nullable String keyFingerprint;
    /**
     * @return The access key secret.
     * 
     */
    private final @Nullable String secret;
    /**
     * @return The secret access key converted into an SES SMTP password by applying AWS&#39;s Sigv4 conversion algorithm.
     * 
     */
    private final @Nullable String sesSmtpPasswordV4;
    /**
     * @return Active or Inactive. Keys are initially active, but can be made inactive by other means.
     * 
     */
    private final @Nullable String status;

    @CustomType.Constructor
    private AccessKeyOutput(
        @CustomType.Parameter("encryptedSecret") @Nullable String encryptedSecret,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("keyFingerprint") @Nullable String keyFingerprint,
        @CustomType.Parameter("secret") @Nullable String secret,
        @CustomType.Parameter("sesSmtpPasswordV4") @Nullable String sesSmtpPasswordV4,
        @CustomType.Parameter("status") @Nullable String status) {
        this.encryptedSecret = encryptedSecret;
        this.id = id;
        this.keyFingerprint = keyFingerprint;
        this.secret = secret;
        this.sesSmtpPasswordV4 = sesSmtpPasswordV4;
        this.status = status;
    }

    /**
     * @return The encrypted secret, base64 encoded.
     * 
     */
    public Optional<String> encryptedSecret() {
        return Optional.ofNullable(this.encryptedSecret);
    }
    /**
     * @return The access key ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The fingerprint of the PGP key used to encrypt the secret.
     * 
     */
    public Optional<String> keyFingerprint() {
        return Optional.ofNullable(this.keyFingerprint);
    }
    /**
     * @return The access key secret.
     * 
     */
    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }
    /**
     * @return The secret access key converted into an SES SMTP password by applying AWS&#39;s Sigv4 conversion algorithm.
     * 
     */
    public Optional<String> sesSmtpPasswordV4() {
        return Optional.ofNullable(this.sesSmtpPasswordV4);
    }
    /**
     * @return Active or Inactive. Keys are initially active, but can be made inactive by other means.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessKeyOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String encryptedSecret;
        private @Nullable String id;
        private @Nullable String keyFingerprint;
        private @Nullable String secret;
        private @Nullable String sesSmtpPasswordV4;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessKeyOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptedSecret = defaults.encryptedSecret;
    	      this.id = defaults.id;
    	      this.keyFingerprint = defaults.keyFingerprint;
    	      this.secret = defaults.secret;
    	      this.sesSmtpPasswordV4 = defaults.sesSmtpPasswordV4;
    	      this.status = defaults.status;
        }

        public Builder encryptedSecret(@Nullable String encryptedSecret) {
            this.encryptedSecret = encryptedSecret;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder keyFingerprint(@Nullable String keyFingerprint) {
            this.keyFingerprint = keyFingerprint;
            return this;
        }
        public Builder secret(@Nullable String secret) {
            this.secret = secret;
            return this;
        }
        public Builder sesSmtpPasswordV4(@Nullable String sesSmtpPasswordV4) {
            this.sesSmtpPasswordV4 = sesSmtpPasswordV4;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public AccessKeyOutput build() {
            return new AccessKeyOutput(encryptedSecret, id, keyFingerprint, secret, sesSmtpPasswordV4, status);
        }
    }
}
